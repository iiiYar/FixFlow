version: '3.8'

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - .:/app
      - data:/app/instance
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=${FLASK_ENV:-production}
      - SECRET_KEY=${SECRET_KEY:-default_secret_key}
      - SQLALCHEMY_DATABASE_URI=mysql+pymysql://fixflowuser:fixflowpassword@db/fixflowdb
    restart: unless-stopped
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "flask db upgrade &&
             gunicorn --bind 0.0.0.0:80 app:app"

  db:
    image: mysql:8.0
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=fixflowdb
      - MYSQL_USER=fixflowuser
      - MYSQL_PASSWORD=fixflowpassword
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=rootpassword
    depends_on:
      - db
    networks:
      - app_network
    restart: unless-stopped

volumes:
  data:
  mysql_data:

networks:
  app_network:
    driver: bridge
